{
  "_args": [
    [
      {
        "raw": "overrustle-logs",
        "scope": null,
        "escapedName": "overrustle-logs",
        "name": "overrustle-logs",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/localhost/Desktop/tot/tot/public/javascripts"
    ]
  ],
  "_from": "overrustle-logs@latest",
  "_id": "overrustle-logs@2.0.2",
  "_inCache": true,
  "_location": "/overrustle-logs",
  "_nodeVersion": "5.6.0",
  "_npmOperationalInternal": {
    "host": "packages-5-east.internal.npmjs.com",
    "tmp": "tmp/overrustle-logs-2.0.2.tgz_1455984250795_0.9251546456944197"
  },
  "_npmUser": {
    "name": "kenan",
    "email": "kenan@kenany.me"
  },
  "_npmVersion": "3.7.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "overrustle-logs",
    "scope": null,
    "escapedName": "overrustle-logs",
    "name": "overrustle-logs",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/overrustle-logs/-/overrustle-logs-2.0.2.tgz",
  "_shasum": "4bf6ea74d3d22a90f644a42a856f6cbc13e91e4c",
  "_shrinkwrap": null,
  "_spec": "overrustle-logs",
  "_where": "/home/localhost/Desktop/tot/tot/public/javascripts",
  "author": {
    "name": "Kenan Yildirim",
    "email": "kenan@kenany.me",
    "url": "http://kenany.me/"
  },
  "bugs": {
    "url": "https://github.com/KenanY/overrustle-logs/issues"
  },
  "dependencies": {
    "hyperquest": "^1.2.0",
    "moment": "^2.10.6",
    "overrustle-logs-url": "^1.0.1",
    "split2": "^2.0.1"
  },
  "description": "Streaming download of OverRustle logs",
  "devDependencies": {
    "is-plain-object": "^2.0.1",
    "is-string": "^1.0.4",
    "isstream": "^0.1.2",
    "lodash.isfunction": "^3.0.6",
    "ndjson": "^1.4.2",
    "object-keys": "^1.0.9",
    "tape": "^4.2.2"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "4bf6ea74d3d22a90f644a42a856f6cbc13e91e4c",
    "tarball": "https://registry.npmjs.org/overrustle-logs/-/overrustle-logs-2.0.2.tgz"
  },
  "files": [
    "index.js",
    "LICENSE.txt"
  ],
  "gitHead": "495d433a3bf6cbfaf35619654d1d2494accc315a",
  "homepage": "https://github.com/KenanY/overrustle-logs#readme",
  "keywords": [
    "destinygg",
    "overrustle"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "kenan",
      "email": "kenan@kenany.me"
    }
  ],
  "name": "overrustle-logs",
  "optionalDependencies": {},
  "readme": "# overrustle-logs\n\n[![Build Status][travis-svg]][travis]\n[![Dependency Status][gemnasium-svg]][gemnasium]\n\nStreaming download of OverRustle logs.\n\n## Example\n\nIn this example, we get a stream of all `destiny.gg` messages from a given date,\n\"stringify\" the parsed objects with [`ndjson`][ndjson], and finally pipe to stdout:\n\n   [ndjson]: https://github.com/maxogden/ndjson\n\n``` javascript\nvar logs = require('overrustle-logs');\nvar ndjson = require('ndjson');\n\nlogs({\n  channel: 'Destinygg',\n  date: '2015-10-21'\n}).pipe(ndjson.serialize()).pipe(process.stdout);\n```\n\nWe can also get messages from a specific user. In this example, we will use the\n`'data'` event just for the sake of showing how there are many ways to consume\nstreams in general:\n\n``` javascript\nvar logs = require('overrustle-logs');\n\nlogs({\n  channel: 'Destinygg',\n  date: '2015-10-21',\n  user: 'sztanpet'\n}).on('data', function(data) {\n  console.log(JSON.stringify(data));\n});\n```\n\n## Installation\n\n``` bash\n$ npm install overrustle-logs\n```\n\n## API\n\n``` javascript\nvar logs = require('overrustle-logs');\n```\n\n### `logs(opts)`\n\nReturns a _Readable_ stream of _Objects_ that each represent a message. `opts`\nis an _Object_ whose properties should be:\n\n  - `opts.channel`: _String_ name of channel to download logs of. This is\n  non-optional.\n  - `opts.date`: _String_ date. If you are getting the entire logs of a channel,\n  you must provide the year, month, and day. If you are getting the logs for a\n  specific user, you only need to provide year and month. The format should be\n  [parseable by `moment`](http://momentjs.com/docs/#/parsing/string/) (just use\n  the ISO-8601 standard). This is non-optional.\n  - `opts.user`: _String_ username of user you want to download logs of.\n  This is optional.\n\nHere is an example of an _Object_ that the stream with emit:\n\n``` javascript\n{\n  timestamp: '2015-10-21T23:59:59.000Z',\n  user: 'RustleBot',\n  message: 'YEE'\n}\n```\n\n   [travis]: https://travis-ci.org/KenanY/overrustle-logs\n   [travis-svg]: https://img.shields.io/travis/KenanY/overrustle-logs.svg\n   [gemnasium]: https://gemnasium.com/KenanY/overrustle-logs\n   [gemnasium-svg]: https://img.shields.io/gemnasium/KenanY/overrustle-logs.svg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/KenanY/overrustle-logs.git"
  },
  "scripts": {
    "test": "tape test/index.js"
  },
  "version": "2.0.2"
}
